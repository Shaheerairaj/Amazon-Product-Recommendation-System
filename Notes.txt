A recommendation engine by using Association Rules:
Abstract:
This study represents a recommendation engine which was developed to personalize an e-commerce website. Here, the
personalization approach is collaborative filtering and the technique is association rule mining. The software was developed by
the programming language C# and association rules were generated by Apriori algorithm. The recommendation engine had been
tested by existing data before it was deployed to an e-commerce website. Testing phase was evaluated by accuracy and coverage
while the deployment phase was evaluated by basket ratio, which is the ratio of the number of products added to the shopping
cart to the number of keywords searched by users. The application has taken three weeks. Results show that the recommendation
engine increases the basket ratio.

There are 3 approches to website personalization:
	Content Based
	Rule Based
	Collaborative filtering

(1)Content Based
	The content descriptions of items are represented by a user profile and items that are similar
	to the user profile are recommended to the user
(2)Rule Based
	Decision rules, often based on demographics, psychographics, or other personal characteristics 
	of users, are used to recommend items to users
(3)Collaborative Filtering
	The ratings of a current user for objects are matched with those of similar users in order to produce 
	recommendations for objects not yet rated or seen by an active user.
	Also maintains a database of other user profiles.
	Traditional collaborative filtering methods included using rating data, hybrid methods include content and user ratings.
Assosiaction Rule Mining
	Searches for interesting relationships among items in a given data set.
Assosiaction Analysis
	Is the discovery of association rules.

Support and confidence are used to generate association rules

(1)Support
	Is the percentage of transactions that contain both A and B.
(2)Confidence
	Is the percentage of transactions containing A that also contain B.
(3)Lift
	Gives the strength of the relationship between items A and B. ( > 1 means positive association, < 1 means negative)

Association rule mining is decomposed to 2 sub-problems:
	Find frequent itemsets
	Generate association rules from frequent itemsets with the contraints of a minimal confidence rule

Conclusion:
It was seen that recommendations generated by association rules have significantly increased the basket ratio while
there is no statistically significant difference between situations that recommendation system was inactive and that
recommendations were generated randomly



An Effective Recommender System by Unifying User and Item Trust Information for B2B Applications

Collaborting filtering underperforms in cases where user and item rating are few in number resulting in reduced coverage.

User base CF approach
	A user will receive recommendations of items liked by similar users.
Item based CF approach
	A user will receive recommendations of items that are similar to items the user has liked in the past.

Limitations of CF approach:
	(1)Data Sparcity Problems
		Occurs when users rate only a small portion of available items. Difficulties arise to identify 
		successful neighbors
	(2)Cold-Start Item Problem
		Known as new item problem. New items will generally not have a lot of ratings making recommending these
		items to users of similar interest more difficult as it is harder to determine item neighbors.
	(3)Cold-Start User Problem
		Known as new user data. Due to lack of user ratings the engine is unable to properly identify user neighbors.

Researchers get around this problem using a hybrid solution of including demographics, content-based info, explicit trust info,
semantic info, and user's knowledge.

Limitations of hybrid approaches:
	(1) Not flexible
	(2) Additional information is diffucult to obtain
	(3) Additional info is not always considered to be sufficiently reliable, complete or representative

User Based CF Approach for Memory
	1. Analyze user-item matrix and create a vector for each user containing the users rating on all rated items
	2. Similarity of each pair of users vectors are then computed using Pearson or Cosine correlation (Only between 2 users
	   based on only overlap items defined in their respective rating vectors)
	3. For the target item, the top n users are identified as the users nearest neighbors
	4. Predictions are generated using a weighted average of the neighbors' ratings on the target item
	5. Items obtaining highest prediction rating are recommended to the user

User-based CF approach recommends items to users that are most liked by the users nearest neighbors
Item-based CF approach recommends items to users that are similar to items liked by the user in the past and keeps away those
items not liked by users in the past

Trust-based recommender systems
	Users are aware that recommendations are derived from other trusted users in their circle or indirectly trusted by
	another user trusted by those they trust. And so the trust chain (propagation) continues.
	These have a greater efficiency as they alleviate data sparcity and CS user issues.

Explicit Trust-based recommender systems
	Actively asks users to rate those users whos ratings they find to be trustworthy and builds up a chain of trusted users
	This approach however suffers from the CF user problem and takes too much effort and interaction to build

Implicit Trust-based recommender systems
	Can be expressed based on an assumption that other users' ratings can be considered as recommendations to a certain user
	The more accurate recommendations a user has given in the past the more trustworthy they are



Recommendation Systems Principles Methods and Evaluation: (INCOMPLETE)
Abstract:
On the Internet, where the number of choices is overwhelming, there is need to filter,
prioritize and efficiently deliver relevant information in order to alleviate the problem of information
overload, which has created a potential problem to many Internet users. Recommender systems
solve this problem by searching through large volume of dynamically generated information to provide
users with personalized content and services. This paper explores the different characteristics
and potentials of different prediction techniques in recommendation systems in order to serve as
a compass for research and practice in the field of recommendation systems.

Recommender systems was defined as a means of assisting and augmenting the social process of using recommendations of others to
make choices when there is no sufficient personal knowledge or experience of the alternatives

Different approaches used are collaborative filtering, content-based filtering and hybrid filtering of which collaborative filtering
is the most mature which uses other users' opinions with similar tastes to generate reccomendations.

Content based filtering techniques only take into consideration the active user and disregards other users' reccomendations

Collaborative filtering and content-based filtering approaches are widely used today by implementing contentbased
and collaborative techniques differently and the results of their prediction later combined or adding the characteristics
of content-based to collaborative filtering and vice versa

Phases of reccomendation process:
	1. Information Collection
		Needs a properly constructed user profile/model

	2. Explixit Feedback
		This is where a user is asked to enter ratings of a product. The accuracy of the reccomendation depends on the quantity
		of ratings provided by the user.
		Disadvantage is that is requires effort from user and not many people might do it.

	3. Implicit Feedback
		Infers the likes of a user by looking at what links are clicked where time is spent etc.
		Requires less effort from user and is thought to be more objective.

	4. Hybrid Feedback

	5. Learning Phase
		Applies learning algorithms to selecct attribute of the user

	6. Predictioin/Reccomendation Phase

Reccomendation Filtering Techniques:

	1. Content-Based Filtering
		Emphasis on analysis of items to make reccomendations
		Reccomendations are made based on the users profile of items they have evaluated in the past
		Does not need profile of other users
		Disadvantage is that it needs to have in-depth knowledge of the items
		Pros:
		- Overcome CF challenges; Can reccomend new items even without ratings provided by the user
		- If users preferences change, it can adapt easily.
		- Users can get reccomendations without sharing their profile which ensures privacy.
		Cons:
		- Dependent on items metadata
		- Content Over Specialization: Users are restricted to getting only info about specific items and not new ones

	2. Collaborative Filtering
		Creates a database of user-item matrix of preferences of items by users.
		Matches users with relevent interest by calculating similarities between otehr users' profile.

		Memory Based CF:
		- User based CF techniques calculate similarity between users by comparing their ratings on the same item, it then
		  computes the predicted ratings for an item by the active user as a weighted average of the ratings of the item by
		  users similar to the active user where weights are the similarities of these users with the target item.
		- Item based CF techniques compute predictions using similarity between items and not users. It builds a model of item 
		  similarities by retrieving all items rated by an active user from the user-item matrix, it determines how similar the
		  retrieved items are to the target item, then it selects the k most similar items and their corresponding 
		  similarities are also determined.
		Similarity between user/item is computed most popularly by Pearson-Correlation Similarity and Cosine Similarity

		Model Based CF:
		- Model-based techniques analyze the user-item matrix to identify relations between items; they use these relations to
		  compare the list of top-N recommendations.
		- Solves the sparcity problem.
		- Model based algorithms:
			a. Association Rule:
			   Association rule mining algorithm extract rules that predict the occurance of an item based on the
			   presence of other items in a transaction.
			b. Clustering:
			   Once clusters have been formed, the opinions of other users can be averaged and used to make good
			   recommendations for individual users.
			c. Decision Tree:
			   If trained on very high quality data they can make very accurate predictions.
			d. Artificial Neural Networks:
			   Is a structure of nodes which are arranged in layers in systematic ways. The connections between them
			   have weights associated with them depending on the amount of influence one neuron has on another.
			e. Link Analysis:
			   Process of building up  networks of interconnected objects in order to explore patterns and trends.
			f. Regression Analysis:
			   Used when two or more variables are thought to be systematically connected by a linear relationship.
			   It is a powerful method for analyziing associative relationships between dependant variables and one
			   or more independant variable.
			g. Bayesian Classifiers:









Recommendation Systems Based on Complete Personalization:

Abstract:
Current recommender systems are very inefficient. There are many metrics that are used
to measure the effectiveness of recommender systems. These metrics often include
“conversion rate” and “click through rate”. Recently, these rates are in low single digit
(less than 10%). In other words, for more than 90% of times, the model that the targeting
system is based on, produces noise. The belief in this work is that the main problem
leading to getting such unsatisfactory outcomes is the modeling problem. Much of the
modeling problem could be represented and exemplified in treating users and items as
member of clusters(segments). In this work, we consider full personalization of
recommendation systems. We aim at personalization of users and contents
simultaneously. Recommendations using baseline approach are inaccurate and targeting
based on similarity-based recommendation (collaborative filtering) suffer from many
disadvantages such as the neglect of interactive correlation. In this work, similarity based
targeting has been combined with baseline approach and latent factor models and has been
treated with adaptive regularization allowing complete personalization with respect to
both users and items.

Metrics used to measure effectiveness: 1. Click through rate      2. Conversion Rate

2 main approaches to providing desirable content to users
	1. Search:
		Problems:
		The user might not be looking for that product anymore
		User might change interests in buying products while surfing
		Search is too generalized to help in matching a users demand accurately

High dimensionality is another problem for recommendation systems as there are infinite number of contents (choices) as well as users.
Thus the matching has to take place in a lower dimensional space.

The hybrid model for recommendation systems:
Data is represented in a matrix format of users x items filled with both explicit and implicit data.

Similarity based models:
Given the massive amount of possible contents, one method of narrowing down those content with interest to the user is similarity based
models which use either content-to-content or user-to-user similarity based recommendations.

Explicit content and user based similarity approaches:
In content based similarity models the recommendation system can find the rating of an unrated content by looking at similar items
which have previously been rated by the user.
Similarities are computed using explicit features and then using a weighted average of all similar contents the unknown rating is
computed.

Implicit content and user based similarity approaches:
Same as above just using implicit data

Singular Value Decomposition (SVD): uses the ratings of all users on the items they have rated to implicitly discover the item and
user features. These implicit features discovered are a non-linear/linear combination of the original features.

Collaborative Filtering:
These are implicit based systems which do not require specific domain knowledge or features of contents or users. They use interaction
and feedback to implicitly compute rates. Large amounts of data are needed for this.
This equation is simplified using the MSE equation instead of the RMSE.

The Model for Latent Factor:
This model is a generalization and extension of CF. The goal is to find the underlying (latent) factors that can explain all the
interactions but since these factors have not been or are not observable they are called latent factors. SVD is used here.

The Final Hybrid Recommender system model:
Combination of baseline similarity based model and latent factor then apply localized regularization to acheive fuly personalized
recommendations.

The assumption is that the missing data is missing at random. The model is domain neutral and ratings could be for movies, books,
websites or any other content. This model is based on a different view of regularization technique which leads to improvement in the
estimation of the missinf values.





Completed:
Hybrid User-Item Based Collaborative Filtering
Recommendation Systems Based on Complete Personalization
An Effective Recommender System by Unifying User and Item Trust Information for B2B Applications
A recommendation engine by using Association Rules